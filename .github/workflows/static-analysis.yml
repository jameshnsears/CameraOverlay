name: static-analysis

on:
  push:
    # This should disable running the workflow on tags, according to the
    # on.<push|pull_request>.<branches|tags> GitHub Actions docs.
    branches:
      - "*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CACHE_VERSION: 1

jobs:
  detekt:
    name: detekt
    runs-on: macOS-latest
    steps:
      - name: clone
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: true

      - name: set up jdk
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 11
      - run: ./ci_clear_gradle_cache.sh

      - name: gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ env.CACHE_VERSION }}-${{ hashFiles('**/**.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties', '**/libs.versions.toml') }}

      - name: local.properties
        env:
          LOCAL_PROPERTIES: ${{ secrets.LOCAL_PROPERTIES }}
        run: |
          echo "${LOCAL_PROPERTIES}" | base64 -d > local.properties

      - name: google-services.json
        env:
          GOOGLE_PLAY_JSON_DEVELOPMENT: ${{ secrets.GOOGLE_PLAY_JSON_DEVELOPMENT }}
        run: echo "${GOOGLE_PLAY_JSON_DEVELOPMENT}" | base64 -d > app/google-services.json

      - name: gradlew
        run: |
          set -x
          ./gradlew detekt

      - name: artifact detekt
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: detekt
          path: app/build/reports/detekt/detekt.txt

  ktlintCheck:
    name: ktlintCheck
    runs-on: macOS-latest
    steps:
      - name: clone
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: true

      - name: set up jdk
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 11
      - run: ./ci_clear_gradle_cache.sh

      - name: gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ env.CACHE_VERSION }}-${{ hashFiles('**/**.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties', '**/libs.versions.toml') }}

      - name: local.properties
        env:
          LOCAL_PROPERTIES: ${{ secrets.LOCAL_PROPERTIES }}
        run: |
          echo "${LOCAL_PROPERTIES}" | base64 -d > local.properties

      - name: google-services.json
        env:
          GOOGLE_PLAY_JSON_DEVELOPMENT: ${{ secrets.GOOGLE_PLAY_JSON_DEVELOPMENT }}
        run: echo "${GOOGLE_PLAY_JSON_DEVELOPMENT}" | base64 -d > app/google-services.json

      - name: gradlew
        run: |
          set -x
          ./gradlew ktlintCheck

      - name: artifact ktlintCheck
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ktlintCheck
          path: |
            app/build/reports/ktlint/ktlintAndroidTestSourceSetCheck/ktlintAndroidTestSourceSetCheck.txt
            app/build/reports/ktlint/ktlintFdroidSourceSetCheck/ktlintFdroidSourceSetCheck.txt
            app/build/reports/ktlint/ktlintGoogleplaySourceSetCheck/ktlintGoogleplaySourceSetCheck.txt
            app/build/reports/ktlint/ktlintMainSourceSetCheck/ktlintMainSourceSetCheck.txt
            app/build/reports/ktlint/ktlintTestSourceSetCheck/ktlintTestSourceSetCheck.txt

  lintGooglePlayDebug:
    name: lintGooglePlayDebug
    needs: [detekt, ktlintCheck]
    runs-on: macOS-latest
    steps:
      - name: clone
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: true

      - name: set up jdk
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 11
      - run: ./ci_clear_gradle_cache.sh

      - name: gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ env.CACHE_VERSION }}-${{ hashFiles('**/**.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties', '**/libs.versions.toml') }}

      - name: local.properties
        env:
          LOCAL_PROPERTIES: ${{ secrets.LOCAL_PROPERTIES }}
        run: |
          echo "${LOCAL_PROPERTIES}" | base64 -d > local.properties

      - name: google-services.json
        env:
          GOOGLE_PLAY_JSON_DEVELOPMENT: ${{ secrets.GOOGLE_PLAY_JSON_DEVELOPMENT }}
        run: echo "${GOOGLE_PLAY_JSON_DEVELOPMENT}" | base64 -d > app/google-services.json

      - name: gradlew
        run: |
          set -x
          ./gradlew lintGooglePlayDebug

  lintFdroidDebug:
    name: lintFdroidDebug
    needs: [detekt, ktlintCheck]
    runs-on: macOS-latest
    steps:
      - name: clone
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: true

      - name: set up jdk
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 11
      - run: ./ci_clear_gradle_cache.sh

      - name: gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ env.CACHE_VERSION }}-${{ hashFiles('**/**.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties', '**/libs.versions.toml') }}

      - name: local.properties
        env:
          LOCAL_PROPERTIES: ${{ secrets.LOCAL_PROPERTIES }}
        run: |
          echo "${LOCAL_PROPERTIES}" | base64 -d > local.properties

      - name: gradlew
        run: |
          set -x
          ./gradlew lintFdroidDebug
